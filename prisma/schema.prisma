generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              BigInt   @id @default(autoincrement())
  name            String?  @db.VarChar(255)
  email           String   @unique @db.VarChar(255)
  isEmailVerified Boolean  @default(false)
  role            UserRole @default(USER)
  password        String
  about           String?
  degreeId        BigInt?
  school          String?
  industryId      BigInt?
  occupationId    BigInt?
  domicile        String?
  height          Float?
  zodiacId        BigInt?
  bloodTypeId     BigInt?
  lookingForId    BigInt?
  petId           BigInt?
  exerciseId      BigInt?
  smokingHabitId  BigInt?
  drinkingHabitId BigInt?
  offDayId        BigInt?
  dietId          BigInt?
  foodId          BigInt?
  musicId         BigInt?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  Token        Token[]
  UserLanguage UserLanguage[]
}

model Token {
  id          BigInt    @id @default(autoincrement())
  token       String    @db.VarChar(255)
  type        TokenType
  expires     DateTime
  blacklisted Boolean   @default(false)
  createdAt   DateTime  @default(now())
  userId      BigInt
  user        User      @relation(fields: [userId], references: [id])
}

model Language {
  id            BigInt         @id @default(autoincrement())
  name          String         @unique @db.VarChar(255)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  userLanguages UserLanguage[]
}

model UserLanguage {
  userId     BigInt
  languageId BigInt
  language   Language @relation(fields: [languageId], references: [id])
  user       User     @relation(fields: [userId], references: [id])

  @@id([userId, languageId])
}

//start api ftl
model Member {
  id                          BigInt   @id
  member_id                   String   @db.VarChar(100)
  card_number                 String   @db.VarChar(20)
  type                        BigInt
  compliment_id               BigInt
  compliment_type             String   @db.VarChar(100)
  first_name                  String   @db.VarChar(50)
  last_name                   String   @db.VarChar(50)
  dob                         DateTime
  gender                      BigInt
  email                       String   @db.VarChar(100)
  phone                       String
  ktp_number                  String   @db.VarChar(16)
  weight                      Float
  height                      Float
  hobby                       String
  gym_status                  Int
  gym_brand_id                Int
  statement_compliment_status Int
  term_status                 Int
  address                     String
  city_id                     BigInt
  state_id                    BigInt
  district_id                 BigInt
  subdistrict_id              BigInt
  postal_code                 String
  club_id                     Int
  status                      Int
  source                      String
  appointment_id              BigInt
  approve_status              Int
  approved_by                 BigInt
  approved_at                 DateTime
  created_by                  BigInt
  created_at                  DateTime
  updated_at                  DateTime

  @@map("member")
}

model MemberPackage {
  id                    BigInt   @id
  transaksi_id          BigInt
  user_id               BigInt
  member_id             BigInt
  package_id            BigInt
  personal_trainer_name String
  status                Int
  member_sharing_id     BigInt
  member_br             BigInt
  coupon_go             String
  start_date            DateTime
  expired_date          DateTime
  value                 Decimal
  created_at            DateTime
  updated_at            DateTime

  @@map("member_package")
}

model Transaction {
  id             BigInt   @id
  transaksi_id   BigInt
  type_transaksi Int
  user_id        BigInt
  member_id      BigInt
  package_id     BigInt
  club_id        Int
  price          Decimal
  status         Int
  approve_status Int
  approved_by    BigInt
  approved_at    DateTime
  created_at     DateTime
  updated_by     BigInt
  updated_at     DateTime
  from_qios      Int

  @@map("transaction")
}

model Club {
  id                BigInt   @id
  club_order        String
  name              String
  alias             String
  max_class_pilates Int
  club_opening_date DateTime
  country_id        String
  city_id           Int
  state_id          Int
  address           String
  latitude          String
  longtitude        String
  postal_code       String
  status            Int
  created_at        DateTime
  updated_at        DateTime
  link_payment      String
  doorid            BigInt
  doorkey           String

  @@map("club")
}

model ClubCity {
  id     BigInt @id
  name   String
  status Int

  @@map("club_city")
}

model RequestTransaksi {
  id                  BigInt   @id
  created_by          BigInt
  request_id          BigInt
  member_id           BigInt
  data_old            String
  first_name          String
  last_name           String
  email               String
  phone               String
  address             String
  relation_id         Int
  start_date          DateTime
  package             BigInt
  card_member         String
  personal_trainer    BigInt
  medical_reason_type Int
  freeze_duration_id  Int
  cuti_date           DateTime
  cuti_amount         Int
  medical_amount      BigInt
  nominal_refund      BigInt
  note                String
  status              Int
  approve_status      Int
  approve_status_2    BigInt
  approve_status_3    BigInt
  checked             Int
  note_rejected       String
  note_rejected_2     String
  approved_by         BigInt
  approved_by_2       BigInt
  approved_by_3       BigInt
  approved_at         DateTime
  approved_at_2       DateTime
  approved_at_3       DateTime
  created_at          DateTime
  updated_by          BigInt
  updated_at          DateTime
  external_id         String
  status_paid         String
  judul_permintaan    String
  deskripsi           String

  @@map("request_transaksi")
}

model Scedule {
  id                         BigInt   @id
  classid                    BigInt
  arrival                    DateTime
  starttime                  DateTime
  endtime                    DateTime
  start_str                  DateTime
  end_str                    DateTime
  resourceid                 BigInt
  location                   String
  price                      BigInt
  price_numeric              BigInt
  spacesfree                 Int
  seatallocation             Int
  multiplebookings           String
  minimum_age                Int
  maximum_age                Int
  age_min                    Int
  age_max                    Int
  max_waitinglist            Int
  max_students               Int
  bookingname                String
  classname                  String
  bookable                   Int
  percentfull                Int
  num_students               Int
  already_booked_id          Int
  already_booked_waitlist_id Int
  staffname                  String
  cancelfee                  BigInt
  cancelbenefitloss          String
  waitlist_count             Int
  substitute_staff           String
  staffid                    BigInt
  bgcolour                   String
  description                String
  online_instruction         Int
  informationlink            String
  notes                      String
  companyid                  BigInt
  companyname                String
  allow_skip_payment         Int
  prospectonly               String
  latebooking                String
  prereq_questionnaireid     Int
  sortorder                  Int
  classtypeid                Int
  classtypename              String
  repeatfreq                 String
  repeatend                  String
  auto_enrollment            String
  pre_discount_price         BigInt
  startrow                   Int
  true_starttime             DateTime
  prevbid                    BigInt
  prevbid_waitlist           String
  current                    String
  in_future                  String
  NAME                       String
  repeatend_iso              String
  repeatend_str              String
  arrival_iso                DateTime
  arrival_str                String
  single_guest_addonfee      String
  multiple_guest_addonfee    String
  layout                     String
  description_html           String
  image                      String
  availability               String
  dayofweek                  String
  staffphoto                 String
  salary                     BigInt
  staffnamecover             String
  staffphotocover            String
  labelclass                 String
  total_seat                 Int
  booked_seat                Int
  available_seat             Int
  submit                     Int
  status                     Int
  created_at                 DateTime
  updated_at                 DateTime
  additionalstaffname        String
  display_push               Int
  display_clear              Int
  check_in                   Int
  max_member                 Int
  max_non_member             Int

  @@map("schedule")
}

model ScheduleBlist {
  bid                           Int      @id
  scheduleid                    BigInt
  membershipid                  String
  enquiryid                     String
  repeat                        String
  seat                          Int
  notes                         String
  webbooking                    Int
  webip                         String
  result                        Int
  parentid                      Int
  firstname                     String
  surname                       String
  checkin                       DateTime
  price                         Decimal
  rating                        String
  feedback                      String
  discount_code_id              String
  memberid                      Int
  birthday_today                String
  medicalconditions             String
  customdropdown2value          String
  customboolean8                String
  customtext1                   String
  member_parentname             String
  paid                          Int
  fullname                      String
  memberblank                   String
  booking_name                  String
  is_cancelling_membership      String
  is_firsttime_attend_classtype String
  bookings_attended             Int
  highlighted_waivers           String
  memberfile                    String
  memberphoto                   String

  @@map("schedule_blist")
}

model ScheduleClist {
  id                BigInt   @id
  scheduleid        BigInt
  repeat            String
  notes             String
  webbooking        Int
  lastupdate        DateTime
  memberid          Int
  member_parentname String
  fullname          String
  memberblank       String
  booking_name      String
  memberfile        String
  memberphoto       String

  @@map("schedule_clist")
}

model GymMasterToken {
  member_id  Int      @id
  token      String   @db.VarChar(500)
  expires    BigInt
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("gymmmaster_token")
}

model DecryptPwd {
  member_id  Int      @id
  password   String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("decrypt_pwd")
}

enum UserRole {
  USER
  ADMIN
}

enum TokenType {
  ACCESS
  REFRESH
  RESET_PASSWORD
  VERIFY_EMAIL
}
