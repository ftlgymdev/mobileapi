generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                          BigInt         @id @default(autoincrement())
  member_id                   String?        @db.VarChar(100)
  card_number                 String?        @db.VarChar(20)
  type                        BigInt?
  compliment_id               BigInt?
  compliment_type             String?        @db.VarChar(100)
  first_name                  String?        @db.VarChar(50)
  last_name                   String?        @db.VarChar(50)
  dob                         DateTime?
  gender                      BigInt?
  email                       String         @unique @db.VarChar(255)
  phone                       String?
  ktp_number                  String?        @db.VarChar(16)
  weight                      Float?
  height                      Float?
  hobby                       String?
  gym_status                  Int?
  gym_brand_id                Int?
  statement_compliment_status Int?
  term_status                 Int?
  address                     String?
  city_id                     BigInt?
  state_id                    BigInt?
  district_id                 BigInt?
  subdistrict_id              BigInt?
  postal_code                 String?
  club_id                     Int?
  status                      Int?
  source                      String?
  appointment_id              BigInt?
  approve_status              Int?
  approved_by                 BigInt?
  approved_at                 DateTime?
  created_by                  BigInt?
  created_at                  DateTime       @default(now())
  updated_at                  DateTime       @updatedAt
  is_email_verified           Boolean?       @default(true)
  role                        UserRole       @default(USER)
  password                    String?
  Token                       Token[]
  UserLanguage                UserLanguage[]

  sentNotifications     Notification[] @relation("SenderRelation")
  receivedNotifications Notification[] @relation("ReceiverRelation")
  Club                  Club[]
  UserFile              UserFile[]

  @@map("member")
}

model Token {
  id          BigInt    @id @default(autoincrement())
  token       String    @db.VarChar(255)
  type        TokenType
  expires     DateTime
  blacklisted Boolean   @default(false)
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  user_id     BigInt
  User        User      @relation(fields: [user_id], references: [id])
}

model Language {
  id            BigInt         @id @default(autoincrement())
  name          String         @unique @db.VarChar(255)
  created_at    DateTime       @default(now())
  updated_at    DateTime       @updatedAt
  userLanguages UserLanguage[]
}

model UserLanguage {
  userId     BigInt
  languageId BigInt
  language   Language @relation(fields: [languageId], references: [id])
  User       User     @relation(fields: [userId], references: [id])

  @@id([userId, languageId])
}

model Staff {
  id                   BigInt    @id @default(autoincrement()) @db.BigInt
  first_name           String    @db.VarChar(50)
  last_name            String    @db.VarChar(50)
  email                String    @unique @db.VarChar(50)
  phone                String    @db.VarChar(15)
  nik                  String    @db.VarChar(16)
  password             String    @db.VarChar(255)
  gender               Int       @default(0)
  dob                  DateTime  @db.Date
  city_id              Int
  province_id          Int
  club_id              BigInt
  address              String    @db.VarChar(255)
  trainer_level_id     Int       @default(0)
  description          String?   @db.VarChar(255)
  status               Int       @default(1)
  reject_note          String?   @db.VarChar(100)
  activated_by         BigInt?   @db.BigInt
  activated_date       DateTime?
  join_date            DateTime?
  resign_date          DateTime?
  note_resign          String?   @db.Text
  id_bitrix            Int?
  id_gymmaster         Int?
  resource_id          BigInt?   @db.BigInt
  id_greatday          BigInt?   @db.BigInt
  status_request       Int?      @default(0)
  request              String?   @db.VarChar(256)
  created_by           BigInt    @db.BigInt
  updated_by           BigInt?   @db.BigInt
  created_at           DateTime  @default(now())
  updated_at           DateTime  @updatedAt
  no_rekening          String?   @db.VarChar(250)
  nama_rekening        String?   @db.VarChar(250)
  total_hari_kerja     Int
  basic_salary         BigInt    @db.BigInt
  positional_allowance BigInt    @db.BigInt
  other_allowances     BigInt    @db.BigInt
  Club                 Club      @relation(fields: [club_id], references: [id])

  @@map("user")
}

model MemberPackage {
  id                    BigInt    @id
  transaksi_id          BigInt    @default(0)
  user_id               BigInt    @default(0)
  member_id             BigInt?
  package_id            BigInt?
  personal_trainer_name String?
  status                Int?
  member_sharing_id     BigInt?
  member_br             BigInt?
  coupon_go             String?
  start_date            DateTime?
  expired_date          DateTime?
  value                 Decimal?
  created_at            DateTime?
  updated_at            DateTime?

  @@map("member_package")
}

model Transaction {
  id             BigInt    @id
  transaksi_id   BigInt    @default(0)
  type_transaksi Int       @default(0)
  user_id        BigInt?
  member_id      BigInt?
  package_id     BigInt?
  club_id        Int?
  price          Decimal?
  status         Int?
  approve_status Int?      @default(0)
  approved_by    BigInt?
  approved_at    DateTime?
  updated_by     BigInt?
  created_at     DateTime  @default(now())
  updated_at     DateTime  @updatedAt
  from_qios      Int?      @default(0)

  @@map("transaction")
}

model Club {
  id                BigInt       @id
  club_order        String?
  name              String?
  alias             String
  max_class_pilates Int?
  club_opening_date DateTime?
  country_id        String?
  city_id           Int?
  state_id          Int?
  address           String?
  latitude          String?
  longtitude        String?
  postal_code       String?
  status            Int?
  created_at        DateTime?
  updated_at        DateTime?
  link_payment      String?
  doorid            BigInt?
  doorkey           String?
  ClubImages        ClubImages[]
  Staff             Staff[]
  User              User[]

  @@map("club")
}

model ClubCity {
  id     BigInt  @id
  name   String?
  status Int?

  @@map("club_city")
}

model RequestTransaksi {
  id                  BigInt    @id
  created_by          BigInt
  request_id          BigInt?
  member_id           BigInt?
  data_old            String?
  first_name          String?
  last_name           String?
  email               String?
  phone               String?
  address             String?
  relation_id         Int?
  start_date          DateTime?
  package             BigInt?
  card_member         String?
  personal_trainer    BigInt?
  medical_reason_type Int?
  freeze_duration_id  Int?
  cuti_date           DateTime?
  cuti_amount         Int?
  medical_amount      BigInt?   @default(0)
  nominal_refund      BigInt?   @default(0)
  note                String?
  status              Int?
  approve_status      Int?
  approve_status_2    BigInt?
  approve_status_3    BigInt?
  checked             Int       @default(0)
  note_rejected       String?
  note_rejected_2     String?
  approved_by         BigInt?
  approved_by_2       BigInt?
  approved_by_3       BigInt?
  approved_at         DateTime?
  approved_at_2       DateTime?
  approved_at_3       DateTime?
  updated_by          BigInt?
  created_at          DateTime  @default(now())
  updated_at          DateTime  @updatedAt
  external_id         String?
  status_paid         String?
  judul_permintaan    String?
  deskripsi           String?

  @@map("request_transaksi")
}

model Schedule {
  id                         BigInt    @id
  classid                    BigInt?
  arrival                    String?
  starttime                  String?
  endtime                    String?
  start_str                  String?
  end_str                    String?
  resourceid                 BigInt?
  location                   String?
  price                      BigInt?
  price_numeric              BigInt?
  spacesfree                 Int?
  seatallocation             Int?
  multiplebookings           String?
  minimum_age                Int?
  maximum_age                Int?
  age_min                    Int?
  age_max                    Int?
  max_waitinglist            Int?
  max_students               Int?
  bookingname                String?
  classname                  String?
  bookable                   Int?
  percentfull                Int?
  num_students               Int?
  already_booked_id          Int?
  already_booked_waitlist_id Int?
  staffname                  String?
  cancelfee                  BigInt?
  cancelbenefitloss          String?
  waitlist_count             Int?
  substitute_staff           String?
  staffid                    BigInt?
  bgcolour                   String?
  description                String?   @db.Text
  online_instruction         Int?
  informationlink            String?
  notes                      String?   @db.Text
  companyid                  BigInt?
  companyname                String?
  allow_skip_payment         Int?
  prospectonly               String?
  latebooking                String?
  prereq_questionnaireid     Int?
  sortorder                  Int?
  classtypeid                Int?
  classtypename              String?
  repeatfreq                 String?
  repeatend                  String?
  auto_enrollment            String?
  pre_discount_price         BigInt?
  startrow                   Int?
  true_starttime             DateTime?
  prevbid                    BigInt?
  prevbid_waitlist           String?
  current                    String?
  in_future                  String?
  NAME                       String?
  repeatend_iso              String?
  repeatend_str              String?
  arrival_iso                DateTime?
  arrival_str                String?
  single_guest_addonfee      String?
  multiple_guest_addonfee    String?
  layout                     String?
  description_html           String?
  image                      String?
  availability               String?
  dayofweek                  String?
  staffphoto                 String?
  salary                     BigInt?   @default(0)
  staffnamecover             String?
  staffphotocover            String?
  labelclass                 String?
  total_seat                 Int?      @default(0)
  booked_seat                Int?      @default(0)
  available_seat             Int?      @default(0)
  submit                     Int?      @default(0)
  status                     Int?      @default(0)
  created_at                 DateTime? @default(now())
  updated_at                 DateTime? @updatedAt
  additionalstaffname        String?
  display_push               Int?      @default(0)
  display_clear              Int?      @default(0)
  check_in                   Int?
  max_member                 Int?
  max_non_member             Int?

  @@map("schedule")
}

model ScheduleBlist {
  bid                           Int       @id
  scheduleid                    BigInt?
  membershipid                  String?
  enquiryid                     String?
  repeat                        String?
  seat                          Int?
  notes                         String?
  webbooking                    Int?
  webip                         String?
  result                        Int?
  parentid                      Int?
  firstname                     String?
  surname                       String?
  checkin                       DateTime?
  price                         Decimal?
  rating                        String?
  feedback                      String?
  discount_code_id              String?
  memberid                      Int?
  birthday_today                String?
  medicalconditions             String?
  customdropdown2value          String?
  customboolean8                String?
  customtext1                   String?
  member_parentname             String?
  paid                          Int?
  fullname                      String?
  memberblank                   String?
  booking_name                  String?
  is_cancelling_membership      String?
  is_firsttime_attend_classtype String?
  bookings_attended             Int?
  highlighted_waivers           String?
  memberfile                    String?
  memberphoto                   String?

  @@map("schedule_blist")
}

model ScheduleClist {
  id                BigInt    @id
  scheduleid        BigInt?
  repeat            String?
  notes             String?
  webbooking        Int?
  lastupdate        DateTime?
  memberid          Int?
  member_parentname String?
  fullname          String?
  memberblank       String?
  booking_name      String?
  memberfile        String?
  memberphoto       String?

  @@map("schedule_clist")
}

model GymMasterToken {
  member_id  Int      @id
  token      String   @db.VarChar(500)
  expires    BigInt
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("mobile_gymmmaster_member_tokens")
}

model DecryptPwd {
  member_id  Int      @id
  email      String   @unique
  password   String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("decrypt_memberpwd")
}

model Notification {
  id          Int      @id @default(autoincrement())
  sender_id   BigInt?
  receiver_id BigInt?
  title       String   @db.VarChar(255)
  message     String?  @db.LongText
  is_read     Boolean  @default(false)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  Sender      User?    @relation("SenderRelation", fields: [sender_id], references: [id])
  Receiver    User?    @relation("ReceiverRelation", fields: [receiver_id], references: [id])

  @@map("mobile_notifications")
}

model AppConfig {
  id           Int      @id @default(autoincrement())
  platform     String   @unique
  version      String?
  force_update Boolean  @default(false)
  download_url String?
  message      String
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt

  @@map("mobile_app_config")
}

model ClubImages {
  id             BigInt   @id @default(autoincrement()) @db.BigInt
  club_id        BigInt
  file_base_url  String   @db.VarChar(100)
  file_base_path String   @db.VarChar(250)
  file_path      String   @db.VarChar(100)
  file_name      String   @db.VarChar(250)
  file_extention String   @db.VarChar(50)
  status         Int      @default(1)
  created_by     BigInt   @db.BigInt
  updated_by     BigInt?  @db.BigInt
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt
  Club           Club     @relation(fields: [club_id], references: [id])

  @@map("mobile_club_images")
}

model Banners {
  id             Int          @id @default(autoincrement())
  title          String       @db.VarChar(255)
  description    String?      @db.Text
  file_base_url  String       @db.VarChar(100)
  file_base_path String       @db.VarChar(250)
  file_path      String       @db.VarChar(100)
  file_name      String       @db.VarChar(250)
  file_extention String       @db.VarChar(50)
  status         BannerStatus @default(ACTIVE)
  priority       Int          @default(1)
  startDate      DateTime?
  end_date       DateTime?
  created_at     DateTime     @default(now())
  updated_at     DateTime     @updatedAt

  @@map("mobile_banners")
}

model UserFile {
  id             BigInt    @id @default(autoincrement())
  member_id      BigInt?
  compliment_id  BigInt?
  request_id     BigInt
  payment_id     BigInt?
  reference_id   BigInt?
  title          String?   @db.VarChar(225)
  status         Int?
  description    String?   @db.VarChar(255)
  file_type_id   Int?
  file_base_url  String?   @db.VarChar(256)
  file_base_path String?   @db.VarChar(256)
  file_path      String?   @db.VarChar(100)
  file_name      String?   @db.VarChar(100)
  file_extention String?   @db.VarChar(100)
  created_at     DateTime? @default(now())
  updated_at     DateTime? @updatedAt

  User User? @relation(fields: [member_id], references: [id])

  @@map("member_file")
}

enum BannerStatus {
  ACTIVE
  INACTIVE
  ARCHIVED
}

enum UserRole {
  USER
  ADMIN
}

enum TokenType {
  ACCESS
  REFRESH
  RESET_PASSWORD
  VERIFY_EMAIL
}
